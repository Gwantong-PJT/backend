<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--연결할 mapper객체(java) 연결-->
<mapper namespace="com.gwantong.project.hotplace.mapper.HotplaceMapper">

    <!--아래 type에 명시된 dto들은 application.properties의 mybatis설정에서 alias가 설정된 객체들-->
    <!--아래는 resultMap 설정. type=저장객체, id=이름, column=DB결과, property=객체의 필드-->
    
    <resultMap type="hotplaceDto" id="hotplaceDtoMap">
        <result column="hotplace_no" property="hotplaceNo"/>
        <result column="user_no" property="userNo"/>
        <result column="user_name" property="userName"/>
        <result column="hotplace_title" property="hotplaceTitle"/>
        <result column="hotplace_text" property="hotplaceText"/>
        <result column="hotplace_date" property="hotplaceDate"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="hotplace_views" property="hotplaceViews"/>
    </resultMap>

    <resultMap type="hotplacePictureDto" id="hotplacePictureDtoMap">
        <result column="picture_no" property="pictureNo"/>
        <result column="hotplace_no" property="hotplaceNo"/>
        <result column="picture_url" property="pictureUrl"/>
    </resultMap>

    <resultMap type="commentDto" id="commentDtoMap">
        <result column="comment_no" property="commentNo"/>
        <result column="hotplace_no" property="hotplaceNo"/>
        <result column="user_no" property="userNo"/>
        <result column="comment_text" property="commentText"/>
        <result column="comment_date" property="commentDate"/>
    </resultMap>

	<resultMap type="hotplaceDto" id="extendHotplaceDtoMap" extends="hotplaceDtoMap">
		<collection property="comments" column="hotplace_no" javaType="list" ofType="commentDto" select="commentList"/>
		<collection property="pictures" column="hotplace_no" javaType="list" ofType="hotplacePictureDto" select="pictureList"/>
	</resultMap>


    <!-- 모든 글 보기 -->
    <select id="viewAllHotplaces" resultMap="hotplaceDtoMap">
        select hotplace_no, hotplace_title, hotplace_text, hotplace_date, hotplace_views, user_no, user_name 
        from hotplaces_tb 
        left join users_tb 
        using(user_no)
        order by hotplace_no desc
    </select>
    
    <!-- 게시글 상세 확인 -->
    <select id="selectHotplace" parameterType="int" resultMap="extendHotplaceDtoMap">
        select hotplace_no, hotplace_title, hotplace_text, hotplace_date, hotplace_views, user_no, user_name
        from hotplaces_tb
        left join users_tb 
        using(user_no)
        where hotplace_no = #{hotplaceNo}
    </select>

    <!-- 게시글 상세 확인 : 댓글 조회 -->
    <select id="commentList" resultMap="commentDtoMap">
        select * from comment_tb where hotplace_no = #{hotplace_no}
    </select>

    <!-- 게시글 상세 확인 : 사진 조회 -->
    <select id="pictureList"  resultMap="hotplacePictureDtoMap">
        select * from hotplace_picture_tb where hotplace_no = #{hotplace_no}
    </select>

    <!-- 사용자가 작성한 게시글 확인 -->
    <select id ="usersHotplaces" parameterType="int" resultMap = "hotplaceDtoMap">
        select hotplace_no, hotplace_title, hotplace_text, hotplace_date, hotplace_views, user_no, user_name
        from hotplaces_tb
        left join users_tb 
        using(user_no)
        where user_no = #{userNo};
    </select>

    <!-- 게시글 작성 -->
    <insert id="insertHotplace" parameterType="hotplaceDto" useGeneratedKeys="true" keyProperty="hotplaceNo">
        insert into hotplaces_tb(`user_no`, `hotplace_title`,`hotplace_text`
        <trim>
            <if test="latitude != 0">,`latitude`</if>
            <if test="longitude != 0">,`longitude`</if>
        </trim>
        )
        value
        (#{userNo}, #{hotplaceTitle}, #{hotplaceText}
        <trim>
            <if test="latitude != 0">,#{latitude}</if>
            <if test="longitude != 0">,#{longitude}</if>
        </trim>
        )
    </insert>

    <!-- 게시글 조회수 올리기 -->
    <update id="increaseHotplaceViews" parameterType="int">
        update hotplaces_tb 
        set 
        hotplace_views = hotplace_views + 1 
        where hotplace_no = #{hotplaceNo}
    </update>

    <!-- 게시글 수정 -->
    <update id="updateHotplace" parameterType="hotplaceDto">
        update hotplaces_tb set hotplace_date = now()
        <trim>
            <if test="latitude != 0">, latitude = #{latitude} </if>
            <if test="longitude != 0">, longitude = #{longitude}</if>
            <if test="hotplaceTitle != null and hotplaceTitle != ''">, hotplace_title = #{hotplaceTitle}</if>
            <if test="hotplaceText != null and hotplaceText != ''">, hotplace_text = #{hotplaceText}</if>
        </trim>
        where hotplace_no = #{hotplaceNo}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteHotplace" parameterType="int">
        delete from hotplaces_tb where hotplace_no = #{hotplaceNo}
    </delete>

    
    <!-- 사진 업로드 -->
    <insert id = "uploadPicture" parameterType="string">
        insert into hotplace_picture_tb (`hotplace_no`,`picture_url`) values
        <foreach collection="list" item="item" separator=",">
            (#{item.hotplaceNo}, #{item.pictureUrl})
        </foreach>
    </insert>

    <!-- 댓글 작성 -->
    <insert id="insertComment" parameterType="commentDto">
        insert into comment_tb(`hotplace_no`, `user_no`, `comment_text`)
        value (#{hotplaceNo}, #{userNo}, #{commentText})
    </insert>

    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="commentDto">
        update comment_tb
        set comment_text = #{commentText}
        where comment_no =#{commentNo}
    </update>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="int">
        delete from comment_tb where comment_no = #{commentNo}
    </delete>

</mapper>